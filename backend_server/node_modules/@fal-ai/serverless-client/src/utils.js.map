{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../libs/client/src/utils.ts"],"names":[],"mappings":";;;AAAA,SAAgB,QAAQ,CAAC,EAAU;IACjC,OAAO,CACL,OAAO,EAAE,KAAK,QAAQ;QACtB,EAAE,CAAC,MAAM,KAAK,EAAE;QAChB,EAAE,CAAC,EAAE,CAAC,KAAK,GAAG;QACd,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACtC,CAAC;AACJ,CAAC;AAPD,4BAOC;AAED,SAAgB,UAAU,CAAC,GAAW;IACpC,IAAI;QACF,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/B,OAAO,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KAC9C;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AAPD,gCAOC;AAED,8DAA8D;AAC9D,SAAgB,QAAQ,CACtB,IAAO,EACP,KAAa,EACb,OAAO,GAAG,KAAK;IAEf,IAAI,QAA+B,CAAC;IACpC,IAAI,OAAe,CAAC;IAEpB,OAAO,CAAC,GAAG,IAAmB,EAAwB,EAAE;QACtD,IAAI,CAAC,OAAO,IAAI,OAAO,EAAE;YACvB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;YACd,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;SACtB;aAAM;YACL,IAAI,QAAQ,EAAE;gBACZ,YAAY,CAAC,QAAQ,CAAC,CAAC;aACxB;YAED,QAAQ,GAAG,UAAU,CAAC,GAAG,EAAE;gBACzB,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,IAAI,KAAK,EAAE;oBACjC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;oBACd,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;iBACtB;YACH,CAAC,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC;SACpC;IACH,CAAC,CAAC;AACJ,CAAC;AAzBD,4BAyBC;AAED,IAAI,gBAAqC,CAAC;AAE1C;;;;;;;;GAQG;AACH,SAAgB,OAAO;IACrB,IAAI,gBAAgB,KAAK,SAAS,EAAE;QAClC,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;QAChC,gBAAgB;YACd,CAAC,CAAC,KAAK;gBACP,CAAC,KAAK,CAAC,QAAQ,CAAC,yBAAyB,CAAC;oBACxC,KAAK,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC;KAC3C;IACD,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AATD,0BASC","sourcesContent":["export function isUUIDv4(id: string): boolean {\n  return (\n    typeof id === 'string' &&\n    id.length === 36 &&\n    id[14] === '4' &&\n    ['8', '9', 'a', 'b'].includes(id[19])\n  );\n}\n\nexport function isValidUrl(url: string) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.hostname.endsWith('fal.ai');\n  } catch (_) {\n    return false;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number,\n  leading = false\n): (...funcArgs: Parameters<T>) => ReturnType<T> | void {\n  let lastFunc: NodeJS.Timeout | null;\n  let lastRan: number;\n\n  return (...args: Parameters<T>): ReturnType<T> | void => {\n    if (!lastRan && leading) {\n      func(...args);\n      lastRan = Date.now();\n    } else {\n      if (lastFunc) {\n        clearTimeout(lastFunc);\n      }\n\n      lastFunc = setTimeout(() => {\n        if (Date.now() - lastRan >= limit) {\n          func(...args);\n          lastRan = Date.now();\n        }\n      }, limit - (Date.now() - lastRan));\n    }\n  };\n}\n\nlet isRunningInReact: boolean | undefined;\n\n/**\n * Not really the most optimal way to detect if we're running in React,\n * but the idea here is that we can support multiple rendering engines\n * (starting with React), with all their peculiarities, without having\n * to add a dependency or creating custom integrations (e.g. custom hooks).\n *\n * Yes, a bit of magic to make things works out-of-the-box.\n * @returns `true` if running in React, `false` otherwise.\n */\nexport function isReact() {\n  if (isRunningInReact === undefined) {\n    const stack = new Error().stack;\n    isRunningInReact =\n      !!stack &&\n      (stack.includes('node_modules/react-dom/') ||\n        stack.includes('node_modules/next/'));\n  }\n  return isRunningInReact;\n}\n"]}